services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:8080/api
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/namesdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network
    # Handles cases where the database isn't ready yet
    restart: on-failure

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=namesdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # Initialize the database with schema and seed data
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/src/main/resources/seed-data.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
